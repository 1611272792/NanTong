using ProductionPlanSystem.Help;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ProductionPlanSystem.Controllers
{
    public class SizeController : Controller
    {
        // GET: Size
        public ActionResult Index()
        {
            DataTable sizeinfo = SqlDbHelper.ExecuteDataTable($"EXEC dbo.[proc_Size] @strType = 'sizecount'");
            if (sizeinfo?.Rows.Count > 0)
            {
                ViewBag.count = sizeinfo.Rows[0].Field<int>("Count");
                ViewBag.AllSizeInfo = null;
            }
            else
            {
                ViewBag.count = 0;
            }
            //获取多选框产品信息
            //string sqlStr = string.Format("SELECT AllocationID,AllocationName,AllocationTitle FROM dbo.Allocation WHERE Type='pro'");
            string sqlStr = string.Format($"EXEC dbo.[proc_Size] @strType = 'ProductInfo'");
            DataTable ds = SqlDbHelper.ExecuteDataTable(sqlStr);
            if (ds?.Rows.Count > 0)
            {
                ViewBag.pro = ds;
            }
            else
            {
                ViewBag.pro = null;
            }
            return View();
        }

        #region 添加规格
        /// <summary>
        /// 添加规格
        /// </summary>
        /// <param name="SizeName">规格名称</param>
        /// <returns></returns>
        public ActionResult AddSize(string SizeName, string FieldsID)
        {
            if (string.IsNullOrWhiteSpace(SizeName))
            {
                return Content("规格为空");
            }
            DataTable isin = SqlDbHelper.ExecuteDataTable($"EXEC dbo.[proc_Size] @strType = 'IsIn',@ProductSizeName='{SizeName}'");
            if (isin.Rows.Count > 0)
            {
                return Content("此规格已存在");
            }
            else
            {
                int add = SqlDbHelper.ExecuteNonQuery($"EXEC dbo.[proc_Size] @strType = 'AddSize',@ProductSizeName='{SizeName}',@ProductId='{FieldsID}'");
                if (add > 0)
                {
                    return Content("ok");
                }
                else
                {
                    return Content("添加失败");
                }
            }
        }
        #endregion

        /// <summary>
        /// 删除规格
        /// </summary>
        /// <param name="ProductSizeNo"></param>
        /// <returns></returns>
        public ActionResult DelSize(string ProductSizeNo)
        {
            if (string.IsNullOrWhiteSpace(ProductSizeNo))
            {
                return Content("规格编号为空");
            }
            string ProductSizeNos = ProductSizeNo.Substring(0, ProductSizeNo.Length - 1);
            int del = SqlDbHelper.ExecuteNonQuery($"EXEC dbo.[proc_Size] @strType = 'DelSize',@ProductSizeNos='{ProductSizeNos}'");
            if (del > 0)
            {
                return Content("ok");
            }
            else
            {
                return Content("no");
            }
        }

        /// <summary>
        /// 获取需要编辑的信息
        /// </summary>
        /// <param name="PSNo"></param>
        /// <returns></returns>
        public ActionResult GetUpdSizeInfo(string PSNo)
        {
            if (string.IsNullOrWhiteSpace(PSNo))
            {
                return Content("规格编号为空");
            }
            DataTable info = SqlDbHelper.ExecuteDataTable($"EXEC dbo.[proc_Size] @strType = 'GetSizeInfo',@ProductSizeNo={PSNo}");
            if (info?.Rows.Count > 0)
            {
                int ProductSizeNo = info.Rows[0].Field<int>("ProductSizeNo");
                string FieldsId = info.Rows[0].Field<string>("ProductId");
                string ProductSizeName = info.Rows[0].Field<string>("ProductSizeName");
                return Content(ProductSizeNo + "@" + FieldsId + "@" + ProductSizeName);
            }
            else
            {
                return null;
            }
        }

        public ActionResult EditProductSize(string ProductSizeNo, string ProductSizeName,string FieldsID)
        {
            if (string.IsNullOrWhiteSpace(ProductSizeNo))
            {
                return Content("规格编号为空");
            }
            if (string.IsNullOrWhiteSpace(ProductSizeName))
            {
                return Content("规格名称为空");
            }
            FieldsID = FieldsID.TrimStart(',');
            DataTable isin = SqlDbHelper.ExecuteDataTable($"EXEC dbo.[proc_Size] @strType = 'Updisin',@ProductSizeName='{ProductSizeName}',@ProductSizeNo={ProductSizeNo}");
            if (isin.Rows.Count > 0)
            {
                return Content("此规格已存在");
            }
            else
            {
                int upd = SqlDbHelper.ExecuteNonQuery($"EXEC dbo.[proc_Size] @strType = 'UpdSize',@ProductSizeNo={ProductSizeNo},@ProductSizeName='{ProductSizeName}',@ProductId='{FieldsID}'");
                if (upd > 0)
                {
                    return Content("ok");
                }
                else
                {
                    return Content("no");
                }
            }
        }


        [HttpGet]
        public ActionResult SelectAll(string SizeName, string pagecount, string size)
        {
            //分页
            string mysqls = "";//总数据
            mysqls = string.Format($"EXEC dbo.[proc_Size] @strType='SelectAll',@ProductSizeName='{SizeName}',@pagecount={pagecount},@size={size}");

            DataTable dt = ServerOrLit.isDataTable(LoginController.connType, mysqls);
            if (dt?.Rows.Count > 0)
            {
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    dt.Rows[i]["ProductId"] = getFieldsName(dt.Rows[i]["ProductId"].ToString());

                }
                ViewBag.AllSizeInfo = dt;
            }
            else
            {
                ViewBag.AllSizeInfo = null;
            }

            return PartialView("_Size", dt);
        }

        /// <summary>
        /// 获取产品Id对应的产品
        /// </summary>
        /// <param name="fieldsId"></param>
        /// <returns></returns>
        public string getFieldsName(string fieldsId)
        {
            string FieldsName = "";
            string strSql = string.Format($"EXEC dbo.[proc_Size] @strType='getProductFields',@ProductId='{fieldsId}'");
            DataTable ds = SqlDbHelper.ExecuteDataTable(strSql);
            if (ds?.Rows.Count > 0)
            {
                for (int i = 0; i < ds.Rows.Count; i++)
                {
                    FieldsName += ds.Rows[i]["ProductName"] + ",";
                }

            }
            return FieldsName.TrimEnd(',');
        }
    }
}